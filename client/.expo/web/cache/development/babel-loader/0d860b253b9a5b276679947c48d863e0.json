{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport var emailValidator = function emailValidator(email) {\n  var re = /\\S+@\\S+\\.\\S+/;\n  if (!email || email.length <= 0) return 'Email cannot be empty.';\n  if (!re.test(email)) return 'Ooops! We need a valid email address.';\n  return '';\n};\nexport var passwordValidator = function passwordValidator(password) {\n  if (!password || password.length <= 0) return 'Password cannot be empty.';\n  return '';\n};\nexport var nameValidator = function nameValidator(name) {\n  if (!name || name.length <= 0) return 'Name cannot be empty.';\n  return '';\n};\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar guidelineBaseWidth = 500;\nvar guidelineBaseHeight = 972;\n\nvar scale = function scale(size) {\n  return width / guidelineBaseWidth * size;\n};\n\nvar verticalScale = function verticalScale(size) {\n  return height / guidelineBaseHeight * size;\n};\n\nvar moderateScale = function moderateScale(size) {\n  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  return size + (scale(size) - size) * factor;\n};\n\nexport { scale, verticalScale, moderateScale };","map":{"version":3,"names":["emailValidator","email","re","length","test","passwordValidator","password","nameValidator","name","Dimensions","get","width","height","guidelineBaseWidth","guidelineBaseHeight","scale","size","verticalScale","moderateScale","factor"],"sources":["C:/Users/safyh/Documents/GitHub/ht6-2022/client/utils/utils.js"],"sourcesContent":["import { Dimensions } from 'react-native';\r\n\r\n\r\nexport const emailValidator = (email) => {\r\n  const re = /\\S+@\\S+\\.\\S+/;\r\n\r\n  if (!email || email.length <= 0) return 'Email cannot be empty.';\r\n  if (!re.test(email)) return 'Ooops! We need a valid email address.';\r\n\r\n  return '';\r\n};\r\n\r\nexport const passwordValidator = (password) => {\r\n  if (!password || password.length <= 0) return 'Password cannot be empty.';\r\n\r\n  return '';\r\n};\r\n\r\nexport const nameValidator = (name) => {\r\n  if (!name || name.length <= 0) return 'Name cannot be empty.';\r\n\r\n  return '';\r\n};\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst guidelineBaseWidth = 500;\r\nconst guidelineBaseHeight = 972;\r\n\r\nconst scale = size => width / guidelineBaseWidth * size;\r\nconst verticalScale = size => height / guidelineBaseHeight * size;\r\nconst moderateScale = (size, factor = 0.5) => size + ( scale(size) - size ) * factor;\r\n\r\nexport {scale, verticalScale, moderateScale};\r\n\r\n\r\n// // type: \"POST\" | \"GET\"\r\n// export const pbFetch = (route, type, encoded) => {\r\n//   return new Promise(function (resolve, reject) {\r\n//     let xmlhttp = new XMLHttpRequest();\r\n//     xmlhttp.open(type, 'localhost:3001');\r\n//     xmlhttp.responseType='arraybuffer';\r\n//     xmlhttp.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\r\n//     xmlhttp.onreadystatechange = (e) => {\r\n//       if (xmlhttp.readyState !== 4) {\r\n//         return;\r\n//       }\r\n//       if ( xmlhttp.status === 200 ) {\r\n//         resolve(xmlhttp.response)\r\n//       } else {\r\n//         console.log({\r\n//           status: xmlhttp.status,\r\n//           statusText: xmlhttp.statusText\r\n//         });\r\n//         reject(xmlhttp.status);\r\n//       }\r\n//     };\r\n//     xmlhttp.send(encoded);\r\n//   })\r\n// }"],"mappings":";AAGA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EACvC,IAAMC,EAAE,GAAG,cAAX;EAEA,IAAI,CAACD,KAAD,IAAUA,KAAK,CAACE,MAAN,IAAgB,CAA9B,EAAiC,OAAO,wBAAP;EACjC,IAAI,CAACD,EAAE,CAACE,IAAH,CAAQH,KAAR,CAAL,EAAqB,OAAO,uCAAP;EAErB,OAAO,EAAP;AACD,CAPM;AASP,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;EAC7C,IAAI,CAACA,QAAD,IAAaA,QAAQ,CAACH,MAAT,IAAmB,CAApC,EAAuC,OAAO,2BAAP;EAEvC,OAAO,EAAP;AACD,CAJM;AAMP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;EACrC,IAAI,CAACA,IAAD,IAASA,IAAI,CAACL,MAAL,IAAe,CAA5B,EAA+B,OAAO,uBAAP;EAE/B,OAAO,EAAP;AACD,CAJM;;AAOP,sBAA0BM,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;AAEA,IAAMC,kBAAkB,GAAG,GAA3B;AACA,IAAMC,mBAAmB,GAAG,GAA5B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI;EAAA,OAAIL,KAAK,GAAGE,kBAAR,GAA6BG,IAAjC;AAAA,CAAlB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAD,IAAI;EAAA,OAAIJ,MAAM,GAAGE,mBAAT,GAA+BE,IAAnC;AAAA,CAA1B;;AACA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACF,IAAD;EAAA,IAAOG,MAAP,uEAAgB,GAAhB;EAAA,OAAwBH,IAAI,GAAG,CAAED,KAAK,CAACC,IAAD,CAAL,GAAcA,IAAhB,IAAyBG,MAAxD;AAAA,CAAtB;;AAEA,SAAQJ,KAAR,EAAeE,aAAf,EAA8BC,aAA9B"},"metadata":{},"sourceType":"module"}