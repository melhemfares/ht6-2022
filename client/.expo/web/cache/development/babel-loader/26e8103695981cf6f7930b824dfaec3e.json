{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { memo, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { emailValidator } from \"../utils/utils.js\";\nimport Background from \"../components/Background\";\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../utils/theme.js\";\nimport Button from \"../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ForgotPassword = function ForgotPassword(props) {\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _onSendPressed = function _onSendPressed() {\n    var emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      return;\n    }\n\n    props.navigation.navigate(\"Login\");\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(Logo, {}), _jsx(Header, {\n      children: \"Restore Password\"\n    }), _jsx(TextInput, {\n      label: \"E-mail address\",\n      returnKeyType: \"done\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: _onSendPressed,\n      style: styles.button,\n      children: \"Send Reset Instructions\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.back,\n      onPress: function onPress() {\n        return props.navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        style: styles.label,\n        children: \"\\u2190 Back to login\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  back: {\n    width: '100%',\n    marginTop: 12\n  },\n  button: {\n    marginTop: 12\n  },\n  label: {\n    color: theme.colors.secondary,\n    width: '100%'\n  }\n});\nexport default memo(ForgotPassword);","map":{"version":3,"names":["React","memo","useState","emailValidator","Background","BackButton","Logo","Header","TextInput","theme","Button","ForgotPassword","props","value","error","email","setEmail","_onSendPressed","emailError","navigation","navigate","text","styles","button","back","label","StyleSheet","create","width","marginTop","color","colors","secondary"],"sources":["C:/Users/safyh/Documents/GitHub/ht6-2022/client/views/ForgotPassword.js"],"sourcesContent":["import React, { memo, useState } from 'react';\r\nimport { Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { emailValidator } from '../utils/utils.js';\r\nimport Background from '../components/Background';\r\nimport BackButton from '../components/BackButton';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport TextInput from '../components/TextInput';\r\nimport { theme } from '../utils/theme.js';\r\nimport Button from '../components/Button';\r\n\r\nconst ForgotPassword = (props) => {\r\n  const [email, setEmail] = useState({ value: '', error: '' });\r\n\r\n  const _onSendPressed = () => {\r\n    const emailError = emailValidator(email.value);\r\n\r\n    if (emailError) {\r\n      setEmail({ ...email, error: emailError });\r\n      return;\r\n    }\r\n\r\n    props.navigation.navigate(\"Login\");\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n\r\n      <Logo />\r\n\r\n      <Header>Restore Password</Header>\r\n\r\n      <TextInput\r\n        label=\"E-mail address\"\r\n        returnKeyType=\"done\"\r\n        value={email.value}\r\n        onChangeText={text => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n\r\n      <Button mode=\"contained\" onPress={_onSendPressed} style={styles.button}>\r\n        Send Reset Instructions\r\n      </Button>\r\n\r\n      <TouchableOpacity\r\n        style={styles.back}\r\n        onPress={() => props.navigation.navigate('Login')}\r\n      >\r\n        <Text style={styles.label}>‚Üê Back to login</Text>\r\n      </TouchableOpacity>\r\n    </Background>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  back: {\r\n    width: '100%',\r\n    marginTop: 12,\r\n  },\r\n  button: {\r\n    marginTop: 12,\r\n  },\r\n  label: {\r\n    color: theme.colors.secondary,\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default memo(ForgotPassword);"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;;;;AAEA,SAASC,cAAT;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,SAASC,KAAT;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EAChC,gBAA0BV,QAAQ,CAAC;IAAEW,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE;EAApB,CAAD,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3B,IAAMC,UAAU,GAAGf,cAAc,CAACY,KAAK,CAACF,KAAP,CAAjC;;IAEA,IAAIK,UAAJ,EAAgB;MACdF,QAAQ,iCAAMD,KAAN;QAAaD,KAAK,EAAEI;MAApB,GAAR;MACA;IACD;;IAEDN,KAAK,CAACO,UAAN,CAAiBC,QAAjB,CAA0B,OAA1B;EACD,CATD;;EAWA,OACE,MAAC,UAAD;IAAA,WAEE,KAAC,IAAD,KAFF,EAIE,KAAC,MAAD;MAAA;IAAA,EAJF,EAME,KAAC,SAAD;MACE,KAAK,EAAC,gBADR;MAEE,aAAa,EAAC,MAFhB;MAGE,KAAK,EAAEL,KAAK,CAACF,KAHf;MAIE,YAAY,EAAE,sBAAAQ,IAAI;QAAA,OAAIL,QAAQ,CAAC;UAAEH,KAAK,EAAEQ,IAAT;UAAeP,KAAK,EAAE;QAAtB,CAAD,CAAZ;MAAA,CAJpB;MAKE,KAAK,EAAE,CAAC,CAACC,KAAK,CAACD,KALjB;MAME,SAAS,EAAEC,KAAK,CAACD,KANnB;MAOE,cAAc,EAAC,MAPjB;MAQE,gBAAgB,EAAC,OARnB;MASE,eAAe,EAAC,cATlB;MAUE,YAAY,EAAC;IAVf,EANF,EAmBE,KAAC,MAAD;MAAQ,IAAI,EAAC,WAAb;MAAyB,OAAO,EAAEG,cAAlC;MAAkD,KAAK,EAAEK,MAAM,CAACC,MAAhE;MAAA;IAAA,EAnBF,EAuBE,KAAC,gBAAD;MACE,KAAK,EAAED,MAAM,CAACE,IADhB;MAEE,OAAO,EAAE;QAAA,OAAMZ,KAAK,CAACO,UAAN,CAAiBC,QAAjB,CAA0B,OAA1B,CAAN;MAAA,CAFX;MAAA,UAIE,KAAC,IAAD;QAAM,KAAK,EAAEE,MAAM,CAACG,KAApB;QAAA;MAAA;IAJF,EAvBF;EAAA,EADF;AAgCD,CA9CD;;AAgDA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BH,IAAI,EAAE;IACJI,KAAK,EAAE,MADH;IAEJC,SAAS,EAAE;EAFP,CADyB;EAK/BN,MAAM,EAAE;IACNM,SAAS,EAAE;EADL,CALuB;EAQ/BJ,KAAK,EAAE;IACLK,KAAK,EAAErB,KAAK,CAACsB,MAAN,CAAaC,SADf;IAELJ,KAAK,EAAE;EAFF;AARwB,CAAlB,CAAf;AAcA,eAAe3B,IAAI,CAACU,cAAD,CAAnB"},"metadata":{},"sourceType":"module"}