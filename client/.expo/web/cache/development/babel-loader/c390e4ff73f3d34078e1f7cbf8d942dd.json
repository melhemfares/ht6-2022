{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"mode\", \"style\", \"children\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button as PaperButton } from 'react-native-paper';\nimport { theme } from \"../utils/theme.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Button = function Button(_ref) {\n  var mode = _ref.mode,\n      style = _ref.style,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(PaperButton, _objectSpread(_objectSpread({\n    style: [styles.button, mode === 'outlined' && {\n      backgroundColor: theme.colors.surface\n    }, style],\n    labelStyle: styles.text,\n    mode: mode\n  }, props), {}, {\n    children: children\n  }));\n};\n\nvar styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    marginVertical: 10\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 26\n  }\n});\nexport default memo(Button);","map":{"version":3,"names":["React","memo","Button","PaperButton","theme","mode","style","children","props","styles","button","backgroundColor","colors","surface","text","StyleSheet","create","width","marginVertical","fontWeight","fontSize","lineHeight"],"sources":["C:/Users/safyh/Documents/GitHub/ht6-2022/client/components/Button.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Button as PaperButton } from 'react-native-paper';\r\nimport { theme } from '../utils/theme.js';\r\n\r\nconst Button = ({ mode, style, children, ...props }) => (\r\n  <PaperButton\r\n    style={[\r\n      styles.button,\r\n      mode === 'outlined' && { backgroundColor: theme.colors.surface },\r\n      style,\r\n    ]}\r\n    labelStyle={styles.text}\r\n    mode={mode}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </PaperButton>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    width: '100%',\r\n    marginVertical: 10,\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    fontSize: 15,\r\n    lineHeight: 26,\r\n  },\r\n});\r\n\r\nexport default memo(Button);"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;AAEA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,oBAAtC;AACA,SAASC,KAAT;;;AAEA,IAAMF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAGG,IAAH,QAAGA,IAAH;EAAA,IAASC,KAAT,QAASA,KAAT;EAAA,IAAgBC,QAAhB,QAAgBA,QAAhB;EAAA,IAA6BC,KAA7B;;EAAA,OACb,KAAC,WAAD;IACE,KAAK,EAAE,CACLC,MAAM,CAACC,MADF,EAELL,IAAI,KAAK,UAAT,IAAuB;MAAEM,eAAe,EAAEP,KAAK,CAACQ,MAAN,CAAaC;IAAhC,CAFlB,EAGLP,KAHK,CADT;IAME,UAAU,EAAEG,MAAM,CAACK,IANrB;IAOE,IAAI,EAAET;EAPR,GAQMG,KARN;IAAA,UAUGD;EAVH,GADa;AAAA,CAAf;;AAeA,IAAME,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC/BN,MAAM,EAAE;IACNO,KAAK,EAAE,MADD;IAENC,cAAc,EAAE;EAFV,CADuB;EAK/BJ,IAAI,EAAE;IACJK,UAAU,EAAE,MADR;IAEJC,QAAQ,EAAE,EAFN;IAGJC,UAAU,EAAE;EAHR;AALyB,CAAlB,CAAf;AAYA,eAAepB,IAAI,CAACC,MAAD,CAAnB"},"metadata":{},"sourceType":"module"}