{"ast":null,"code":"import color from 'color';\nimport { white, black } from \"../../styles/themes/v2/colors\";\nexport var MIN_WIDTH = 112;\nexport var MAX_WIDTH = 280;\n\nvar getDisabledColor = function getDisabledColor(theme) {\n  if (theme.isV3) {\n    return theme.colors.onSurfaceDisabled;\n  }\n\n  return color(theme.dark ? white : black).alpha(0.32).rgb().string();\n};\n\nvar getTitleColor = function getTitleColor(_ref) {\n  var theme = _ref.theme,\n      disabled = _ref.disabled;\n\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurface;\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nvar getIconColor = function getIconColor(_ref2) {\n  var theme = _ref2.theme,\n      disabled = _ref2.disabled;\n\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nexport var getMenuItemColor = function getMenuItemColor(_ref3) {\n  var theme = _ref3.theme,\n      disabled = _ref3.disabled;\n  return {\n    titleColor: getTitleColor({\n      theme: theme,\n      disabled: disabled\n    }),\n    iconColor: getIconColor({\n      theme: theme,\n      disabled: disabled\n    }),\n    underlayColor: theme.isV3 ? color(theme.colors.primary).alpha(0.12).rgb().string() : undefined\n  };\n};\nexport var getContentMaxWidth = function getContentMaxWidth(_ref4) {\n  var isV3 = _ref4.isV3,\n      iconWidth = _ref4.iconWidth,\n      leadingIcon = _ref4.leadingIcon,\n      trailingIcon = _ref4.trailingIcon;\n\n  if (isV3) {\n    if (leadingIcon && trailingIcon) {\n      return MAX_WIDTH - (2 * iconWidth + 24);\n    }\n\n    if (leadingIcon || trailingIcon) {\n      return MAX_WIDTH - (iconWidth + 24);\n    }\n\n    return MAX_WIDTH - 12;\n  }\n\n  if (leadingIcon) {\n    return MAX_WIDTH - (iconWidth + 48);\n  }\n\n  return MAX_WIDTH - 16;\n};","map":{"version":3,"sources":["utils.ts"],"names":["MIN_WIDTH","MAX_WIDTH","getDisabledColor","theme","color","getTitleColor","disabled","getIconColor","getMenuItemColor","titleColor","iconColor","underlayColor","undefined","getContentMaxWidth","trailingIcon","leadingIcon","iconWidth"],"mappings":"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","sourcesContent":["import color from 'color';\nimport type { Theme } from '../../types';\nimport { white, black } from '../../styles/themes/v2/colors';\nimport type { IconSource } from '../Icon';\n\nexport const MIN_WIDTH = 112;\nexport const MAX_WIDTH = 280;\n\ntype ContentProps = {\n  isV3: boolean;\n  iconWidth: number;\n  leadingIcon?: IconSource;\n  trailingIcon?: IconSource;\n};\n\ntype ColorProps = {\n  theme: Theme;\n  disabled?: boolean;\n};\n\nconst getDisabledColor = (theme: Theme) => {\n  if (theme.isV3) {\n    return theme.colors.onSurfaceDisabled;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.32)\n    .rgb()\n    .string();\n};\n\nconst getTitleColor = ({ theme, disabled }: ColorProps) => {\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurface;\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getIconColor = ({ theme, disabled }: ColorProps) => {\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nexport const getMenuItemColor = ({ theme, disabled }: ColorProps) => {\n  return {\n    titleColor: getTitleColor({ theme, disabled }),\n    iconColor: getIconColor({ theme, disabled }),\n    underlayColor: theme.isV3\n      ? color(theme.colors.primary).alpha(0.12).rgb().string()\n      : undefined,\n  };\n};\n\nexport const getContentMaxWidth = ({\n  isV3,\n  iconWidth,\n  leadingIcon,\n  trailingIcon,\n}: ContentProps) => {\n  if (isV3) {\n    if (leadingIcon && trailingIcon) {\n      return MAX_WIDTH - (2 * iconWidth + 24);\n    }\n\n    if (leadingIcon || trailingIcon) {\n      return MAX_WIDTH - (iconWidth + 24);\n    }\n\n    return MAX_WIDTH - 12;\n  }\n\n  if (leadingIcon) {\n    return MAX_WIDTH - (iconWidth + 48);\n  }\n\n  return MAX_WIDTH - 16;\n};\n"]},"metadata":{},"sourceType":"module"}