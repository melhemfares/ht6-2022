{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { memo, useState, useEffect } from 'react';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Paragraph from \"../components/Paragraph\";\nimport Button from \"../components/Button\";\nimport Question from \"../components/Question\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Play = function Play(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quizData = _useState4[0],\n      setQuizData = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currIndex = _useState6[0],\n      setIndex = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastSelected = _useState8[0],\n      setLast = _useState8[1];\n\n  var _useState9 = useState(\"progress\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      status = _useState10[0],\n      setStatus = _useState10[1];\n\n  useEffect(function () {\n    var fetchQuizData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var token = yield AsyncStorage.getItem(\"@auth_token\");\n        var response = yield fetch(\"http://localhost:3001/api/quiz\", {\n          method: \"get\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error(\"HTTP error status = \" + response.status);\n        } else {\n          yield response.json().then(function () {\n            var _ref2 = _asyncToGenerator(function* (res) {\n              setQuizData(res.questions);\n              setLoading(false);\n            });\n\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n        }\n      });\n\n      return function fetchQuizData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchQuizData().catch(console.error);\n  }, []);\n\n  function handleAnswerSelection(_x2, _x3) {\n    return _handleAnswerSelection.apply(this, arguments);\n  }\n\n  function _handleAnswerSelection() {\n    _handleAnswerSelection = _asyncToGenerator(function* (item, index) {\n      var body = {\n        answer: item\n      };\n      var token = yield AsyncStorage.getItem(\"@auth_token\");\n      var response = yield fetch(\"http://localhost:3001/api/quiz/\" + (currIndex + 1), {\n        method: \"post\",\n        body: JSON.stringify(body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"HTTP error status = \" + response.status);\n      } else {\n        yield response.json().then(function () {\n          var _ref3 = _asyncToGenerator(function* (res) {\n            if (res) {\n              setLast(index);\n\n              if (res.msg === \"Correct answer!\") {\n                setStatus(\"correct\");\n              } else {\n                setStatus(\"incorrect\");\n              }\n            }\n          });\n\n          return function (_x4) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n      }\n    });\n    return _handleAnswerSelection.apply(this, arguments);\n  }\n\n  return _jsx(React.Fragment, {\n    children: !loading ? _jsx(_Fragment, {\n      children: _jsxs(View, {\n        children: [_jsx(View, {\n          children: _jsxs(Header, {\n            children: [\"Question \", currIndex + 1, \"/\", quizData.length]\n          })\n        }), _jsx(Question, {\n          question: quizData[currIndex].question,\n          options: quizData[currIndex].options.map(function (el) {\n            return Object.values(el);\n          }),\n          onItemSelected: handleAnswerSelection,\n          lastSelected: lastSelected,\n          status: status\n        }), _jsx(Button, {\n          disabled: status == \"progress\",\n          onPress: function onPress() {\n            setIndex(currIndex + 1);\n            setStatus(\"progress\");\n          },\n          children: \"Next Question\"\n        })]\n      })\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Header, {\n        children: \"Loading\"\n      }), _jsx(Paragraph, {\n        children: \"Fetching question data...\"\n      })]\n    })\n  });\n};\n\nexport default memo(Play);","map":{"version":3,"names":["React","memo","useState","useEffect","Background","Logo","Header","Paragraph","Button","Question","AsyncStorage","Play","props","loading","setLoading","quizData","setQuizData","currIndex","setIndex","lastSelected","setLast","status","setStatus","fetchQuizData","token","getItem","response","fetch","method","headers","ok","Error","json","then","res","questions","catch","console","error","handleAnswerSelection","item","index","body","answer","JSON","stringify","msg","length","question","options","map","el","Object","values"],"sources":["C:/Users/fares/Desktop/HT6/ht6-2022/client/views/Play.js"],"sourcesContent":["import React, { memo, useState, useEffect } from 'react';\r\nimport Background from '../components/Background';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Paragraph from '../components/Paragraph';\r\nimport Button from '../components/Button';\r\n\r\nimport Question from \"../components/Question\";\r\n\r\nimport {\r\n    View\r\n  } from 'react-native';\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst Play = (props) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [quizData, setQuizData] = useState(null);\r\n    const [currIndex, setIndex] = useState(0);\r\n    const [lastSelected, setLast] = useState(0);\r\n    const [status, setStatus] = useState(\"progress\");\r\n    useEffect(() => {\r\n        const fetchQuizData = async () => {\r\n            const token = await AsyncStorage.getItem(\"@auth_token\");\r\n            let response = await fetch(\"http://localhost:3001/api/quiz\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(\"HTTP error status = \" + response.status)\r\n            } else {\r\n                await response.json()\r\n                .then((async (res) => {\r\n                    setQuizData(res.questions);\r\n                    setLoading(false);\r\n                }));\r\n            }\r\n        }\r\n        fetchQuizData().catch(console.error);\r\n    }, []);\r\n    async function handleAnswerSelection(item, index) {\r\n        const body = {\r\n            answer: item\r\n        }\r\n        const token = await AsyncStorage.getItem(\"@auth_token\");\r\n        let response = await fetch(\"http://localhost:3001/api/quiz/\" + (currIndex + 1), {\r\n            method: \"post\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(\"HTTP error status = \" + response.status)\r\n        } else {\r\n            await response.json()\r\n            .then((async (res) => {\r\n                if (res) {\r\n                    setLast(index);\r\n                    if (res.msg === \"Correct answer!\") {\r\n                        setStatus(\"correct\");\r\n                    } else {\r\n                        setStatus(\"incorrect\");\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n    }\r\n  return (\r\n    <React.Fragment>\r\n        {!loading ? (\r\n            <>\r\n                <View>\r\n                    <View>\r\n                        <Header>Question {currIndex + 1}/{quizData.length}</Header>\r\n                    </View>\r\n                    <Question\r\n                    question={quizData[currIndex].question}\r\n                    options={quizData[currIndex].options.map(el=>Object.values(el))}\r\n                    onItemSelected={handleAnswerSelection}\r\n                    lastSelected={lastSelected}\r\n                    status={status}\r\n                    />\r\n                    <Button disabled={status == \"progress\"} onPress={() => {\r\n                        setIndex(currIndex + 1);\r\n                        setStatus(\"progress\");\r\n                    }}>Next Question</Button>\r\n                </View>\r\n            </>\r\n        ) : (\r\n        <>\r\n            <Header>Loading</Header>\r\n            <Paragraph>\r\n                Fetching question data...\r\n            </Paragraph>\r\n        </>\r\n        )\r\n        }\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\n\r\nexport default memo(Play);"],"mappings":"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"},"metadata":{},"sourceType":"module"}