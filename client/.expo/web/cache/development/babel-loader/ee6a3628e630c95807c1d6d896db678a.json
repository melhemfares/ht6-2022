{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { memo, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../utils/theme.js\";\nimport { emailValidator, passwordValidator, pbFetch } from \"../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(props) {\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _onLoginPressed = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var emailError = emailValidator(email.value);\n      var passwordError = passwordValidator(password.value);\n\n      if (emailError || passwordError) {\n        setEmail(_objectSpread(_objectSpread({}, email), {}, {\n          error: emailError\n        }));\n        setPassword(_objectSpread(_objectSpread({}, password), {}, {\n          error: passwordError\n        }));\n        return;\n      }\n\n      var body = {};\n      var response = fetch(\"/api/auth/login\", {\n        method: \"post\",\n        body: JSON.stringify(body),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"HTTP error status = \" + response.status);\n      } else {\n        yield response.json().then(function (json) {});\n      }\n    });\n\n    return function _onLoginPressed() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(Background, {\n    children: [_jsx(Logo, {}), _jsx(Header, {\n      children: \"Welcome back.\"\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Forgot Password');\n        },\n        children: _jsx(Text, {\n          style: styles.label,\n          children: \"Forgot your password?\"\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: _onLoginPressed,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Register');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  label: {\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default memo(Login);","map":{"version":3,"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","pbFetch","Login","props","value","error","email","setEmail","password","setPassword","_onLoginPressed","emailError","passwordError","body","response","fetch","method","JSON","stringify","headers","ok","Error","status","json","then","text","styles","forgotPassword","navigation","navigate","label","row","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","color","colors","secondary","fontWeight","primary"],"sources":["C:/Users/fares/Desktop/HT6/ht6-2022/client/views/Login.js"],"sourcesContent":["import React, { memo, useState } from 'react';\r\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\r\nimport Background from '../components/Background';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport TextInput from '../components/TextInput';\r\nimport BackButton from '../components/BackButton';\r\nimport { theme } from '../utils/theme.js';\r\nimport { emailValidator, passwordValidator, pbFetch } from '../utils/utils.js';\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState({ value: '', error: '' });\r\n  const [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n  const _onLoginPressed = async () => {\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n\r\n    if (emailError || passwordError) {\r\n\t\tsetEmail({ ...email, error: emailError });\r\n\t\tsetPassword({ ...password, error: passwordError });\r\n\t\treturn;\r\n    }\r\n    let body = {\r\n\r\n    }\r\n    let response = fetch(\"/api/auth/login\", {\r\n\t\tmethod: \"post\",\r\n\t\tbody: JSON.stringify(body),\r\n\t\theaders: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n    });\r\n\tif (!response.ok) {\r\n\t\tthrow new Error(\"HTTP error status = \" + response.status)\r\n\t} else {\r\n\t\tawait response.json()\r\n\t\t.then((function (json) {\r\n\t\t\t\r\n\t\t}));\r\n\t}\r\n\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n\r\n      <Logo />\r\n\r\n      <Header>Welcome back.</Header>\r\n\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={text => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={text => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n\r\n      <View style={styles.forgotPassword}>\r\n        <TouchableOpacity\r\n          onPress={() => props.navigation.navigate('Forgot Password')}\r\n        >\r\n          <Text style={styles.label}>Forgot your password?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Button mode=\"contained\" onPress={_onLoginPressed}>\r\n        Login\r\n      </Button>\r\n\r\n      <View style={styles.row}>\r\n        <Text style={styles.label}>Donâ€™t have an account? </Text>\r\n        <TouchableOpacity onPress={() => props.navigation.navigate('Register')}>\r\n          <Text style={styles.link}>Sign up</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  label: {\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n\r\nexport default memo(Login);"],"mappings":"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"},"metadata":{},"sourceType":"module"}