{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"alpha\", \"family\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport color from 'color';\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"./Text\";\nimport { useTheme } from \"../../../core/theming\";\n\nvar StyledText = function StyledText(_ref) {\n  var _theme$colors, _theme$fonts;\n\n  var _ref$alpha = _ref.alpha,\n      alpha = _ref$alpha === void 0 ? 1 : _ref$alpha,\n      family = _ref.family,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useTheme();\n  var textColor = color(theme.isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text).alpha(alpha).rgb().string();\n  var writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n  return React.createElement(Text, _extends({}, rest, {\n    style: [styles.text, _objectSpread(_objectSpread({\n      color: textColor\n    }, !theme.isV3 && ((_theme$fonts = theme.fonts) === null || _theme$fonts === void 0 ? void 0 : _theme$fonts[family])), {}, {\n      writingDirection: writingDirection\n    }), style]\n  }));\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default StyledText;","map":{"version":3,"sources":["StyledText.tsx"],"names":["StyledText","alpha","rest","theme","useTheme","textColor","color","writingDirection","I18nManager","styles","text","textAlign"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAGA,OAAA,IAAA;AACA,SAAA,QAAA;;AAQA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAkD;EAAA,IAAA,aAAA,EAAA,YAAA;;EAAjD,iBAAiD,IAAjD,CAAEC,KAAF;EAAA,IAAEA,KAAF,2BAAA,CAAA;EAAA,IAAA,MAAA,GAAiD,IAAjD,CAAA,MAAA;EAAA,IAAA,KAAA,GAAiD,IAAjD,CAAA,KAAA;EAAA,IAA+BC,IAA/B,4BAAiD,IAAjD;;EAClB,IAAMC,KAAK,GAAGC,QAAd,EAAA;EAEA,IAAMC,SAAS,GAAGC,KAAK,CACrBH,KAAK,CAALA,IAAAA,GAAaA,KAAK,CAALA,MAAAA,CAAbA,SAAAA,GAAAA,CAAAA,aAAAA,GAAsCA,KAAK,CAA3CA,MAAAA,MAAAA,IAAAA,IAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAsCA,aAAAA,CADtBG,IAAK,CAALA,CAAAA,KAAAA,CAAAA,KAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB;EAMA,IAAMC,gBAAgB,GAAGC,WAAW,CAAXA,KAAAA,GAAAA,KAAAA,GAAzB,KAAA;EAEA,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;IAEE,KAAK,EAAE,CACLC,MAAM,CADD,IAAA;MAGHH,KAAK,EADP;IAFK,GAIC,CAACH,KAAK,CAAN,IAAA,KAAA,CAAA,YAAA,GAAeA,KAAK,CAApB,KAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAeA,YAAAA,CAFrB,MAEqBA,CAAf,CAJD;MAKHI,gBAAAA,EAAAA;IALG,IAAA,KAAA;EAFT,CAAA,CAAA,CADF;AAXF,CAAA;;AA2BA,IAAME,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BC,IAAI,EAAE;IACJC,SAAS,EAAE;EADP;AADyB,CAAlB,CAAf;AAMA,eAAA,UAAA","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle, StyleSheet } from 'react-native';\n\nimport Text from './Text';\nimport { useTheme } from '../../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha?: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n};\n\nconst StyledText = ({ alpha = 1, family, style, ...rest }: Props) => {\n  const theme = useTheme();\n\n  const textColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme.colors?.text\n  )\n    .alpha(alpha)\n    .rgb()\n    .string();\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        styles.text,\n        {\n          color: textColor,\n          ...(!theme.isV3 && theme.fonts?.[family]),\n          writingDirection,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default StyledText;\n"]},"metadata":{},"sourceType":"module"}