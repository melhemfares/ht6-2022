{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTheme } from \"../../../core/theming\";\nimport AnimatedText from \"../../Typography/AnimatedText\";\n\nvar LabelBackground = function LabelBackground(_ref) {\n  var parentState = _ref.parentState,\n      _ref$labelProps = _ref.labelProps,\n      placeholderStyle = _ref$labelProps.placeholderStyle,\n      baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,\n      topPosition = _ref$labelProps.topPosition,\n      hasActiveOutline = _ref$labelProps.hasActiveOutline,\n      label = _ref$labelProps.label,\n      backgroundColor = _ref$labelProps.backgroundColor,\n      roundness = _ref$labelProps.roundness,\n      labelStyle = _ref.labelStyle,\n      maxFontSizeMultiplier = _ref.maxFontSizeMultiplier;\n  var hasFocus = hasActiveOutline || parentState.value;\n  var opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n\n  var _useTheme = useTheme(),\n      isV3 = _useTheme.isV3,\n      colors = _useTheme.colors;\n\n  var labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0]\n    })\n  };\n  var labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1]\n    })\n  };\n  var labelTextTransform = isV3 ? _toConsumableArray(labelStyle.transform) : [].concat(_toConsumableArray(labelStyle.transform), [labelTextScaleY]);\n  var labelTextWidth = isV3 ? {\n    width: parentState.labelLayout.width - placeholderStyle.paddingHorizontal\n  } : {\n    maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n  };\n  return label ? [React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor: backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity: opacity,\n      bottom: Math.max(roundness, 2),\n      transform: [labelTranslationX]\n    }]\n  }), React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, isV3 && styles.md3OutlinedLabel, {\n      top: topPosition + (isV3 ? 0 : 1),\n      backgroundColor: isV3 ? colors.surface : backgroundColor,\n      opacity: opacity,\n      transform: labelTextTransform\n    }, labelTextWidth],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)] : null;\n};\n\nexport default LabelBackground;\nvar styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  },\n  md3OutlinedLabel: {\n    left: 8\n  }\n});","map":{"version":3,"sources":["LabelBackground.tsx"],"names":["LabelBackground","labelProps","roundness","maxFontSizeMultiplier","hasFocus","hasActiveOutline","parentState","opacity","inputRange","outputRange","colors","useTheme","labelTranslationX","translateX","labelTextScaleY","scaleY","labelTextTransform","isV3","labelStyle","labelTextWidth","width","placeholderStyle","paddingHorizontal","maxWidth","label","StyleSheet","styles","backgroundColor","maxHeight","Math","bottom","transform","top","topPosition","view","position","left","outlinedLabel","color","md3OutlinedLabel"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,SAAA,QAAA;AAEA,OAAA,YAAA;;AAIA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAA,IAAA,EAaI;EAbH,IAAA,WAAA,GAaG,IAbH,CAAA,WAAA;EAAA,sBAaG,IAbH,CAEvBC,UAFuB;EAAA,IAEX,gBAFW,mBAEX,gBAFW;EAAA,IAEX,mBAFW,mBAEX,mBAFW;EAAA,IAEX,WAFW,mBAEX,WAFW;EAAA,IAEX,gBAFW,mBAEX,gBAFW;EAAA,IAEX,KAFW,mBAEX,KAFW;EAAA,IAEX,eAFW,mBAEX,eAFW;EAAA,IASrBC,SATqB,mBASrBA,SATqB;EAAA,IAAA,UAAA,GAaG,IAbH,CAAA,UAAA;EAAA,IAYvBC,qBAZuB,GAaG,IAbH,CAYvBA,qBAZuB;EAcvB,IAAMC,QAAQ,GAAGC,gBAAgB,IAAIC,WAAW,CAAhD,KAAA;EACA,IAAMC,OAAO,GAAG,WAAW,CAAX,OAAA,CAAA,WAAA,CAAgC;IAC9CC,UAAU,EAAE,CAAA,CAAA,EADkC,CAClC,CADkC;IAE9CC,WAAW,EAAE,CAACL,QAAQ,GAAA,CAAA,GAAT,CAAA,EAAA,CAAA;EAFiC,CAAhC,CAAhB;;EAKA,gBAAyBO,QAAzB,EAAA;EAAA,IAAM,IAAN,aAAM,IAAN;EAAA,IAAcD,MAAd,aAAcA,MAAd;;EAEA,IAAME,iBAAiB,GAAG;IACxBC,UAAU,EAAE,WAAW,CAAX,OAAA,CAAA,WAAA,CAAgC;MAC1CL,UAAU,EAAE,CAAA,CAAA,EAD8B,CAC9B,CAD8B;MAE1CC,WAAW,EAAE,CAAC,CAAD,mBAAA,EAAA,CAAA;IAF6B,CAAhC;EADY,CAA1B;EAOA,IAAMK,eAAe,GAAG;IACtBC,MAAM,EAAE,WAAW,CAAX,OAAA,CAAA,WAAA,CAAgC;MACtCP,UAAU,EAAE,CAAA,CAAA,EAD0B,CAC1B,CAD0B;MAEtCC,WAAW,EAAE,CAAA,GAAA,EAAA,CAAA;IAFyB,CAAhC;EADc,CAAxB;EAOA,IAAMO,kBAAkB,GAAGC,IAAI,sBACvBC,UAAU,CADa,SAAA,iCAEvBA,UAAU,CAAd,SAF2B,IAA/B,eAA+B,EAA/B;EAIA,IAAMC,cAAc,GAAGF,IAAI,GACvB;IACEG,KAAK,EACHd,WAAW,CAAXA,WAAAA,CAAAA,KAAAA,GAAgCe,gBAAgB,CAACC;EAFrD,CADuB,GAKvB;IACEC,QAAQ,EACNjB,WAAW,CAAXA,WAAAA,CAAAA,KAAAA,GACA,IAAIe,gBAAgB,CAACC;EAHzB,CALJ;EAWA,OAAOE,KAAK,GACR,CACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;IACE,GAAG,EADL,sBAAA;IAEE,aAAa,EAFf,MAAA;IAGE,KAAK,EAAE,CACLC,UAAU,CADL,YAAA,EAELC,MAAM,CAFD,IAAA,EAGL;MACEC,eADF,EACEA,eADF;MAEEC,SAAS,EAAEC,IAAI,CAAJA,GAAAA,CAAS3B,SAAS,GAAlB2B,CAAAA,EAFb,CAEaA,CAFb;MAGEtB,OAHF,EAGEA,OAHF;MAIEuB,MAAM,EAAED,IAAI,CAAJA,GAAAA,CAAAA,SAAAA,EAJV,CAIUA,CAJV;MAKEE,SAAS,EAAE,CAAA,iBAAA;IALb,CAHK;EAHT,CAAA,CADF,EAgBE,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;IACE,GAAG,EADL,sBAAA;IAEE,KAAK,EAAE,CAAA,gBAAA,EAAA,UAAA,EAGLL,MAAM,CAHD,aAAA,EAILT,IAAI,IAAIS,MAAM,CAJT,gBAAA,EAKL;MACEM,GAAG,EAAEC,WAAW,IAAIhB,IAAI,GAAA,CAAA,GAD1B,CACkB,CADlB;MAEEU,eAAe,EAAEV,IAAI,GAAGP,MAAM,CAAT,OAAA,GAFvB,eAAA;MAGEH,OAHF,EAGEA,OAHF;MAIEwB,SAAS,EAAEf;IAJb,CALK,EAFT,cAES,CAFT;IAeE,aAAa,EAff,CAAA;IAgBE,qBAAqB,EAAEb;EAhBzB,CAAA,EAjBM,KAiBN,CAhBF,CADQ,GAAZ,IAAA;AAnDF,CAAA;;AA4FA,eAAA,eAAA;AAEA,IAAMuB,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BQ,IAAI,EAAE;IACJC,QAAQ,EADJ,UAAA;IAEJH,GAAG,EAFC,CAAA;IAGJI,IAAI,EAHA,EAAA;IAIJhB,KAAK,EAAE;EAJH,CADyB;EAO/BiB,aAAa,EAAE;IACbF,QAAQ,EADK,UAAA;IAEbC,IAAI,EAFS,EAAA;IAGbd,iBAAiB,EAHJ,CAAA;IAIbgB,KAAK,EAAE;EAJM,CAPgB;EAa/BC,gBAAgB,EAAE;IAChBH,IAAI,EAAE;EADU;AAba,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { useTheme } from '../../../core/theming';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness,\n  },\n  labelStyle,\n  maxFontSizeMultiplier,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const { isV3, colors } = useTheme();\n\n  const labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0],\n    }),\n  };\n\n  const labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1],\n    }),\n  };\n\n  const labelTextTransform = isV3\n    ? [...labelStyle.transform]\n    : [...labelStyle.transform, labelTextScaleY];\n\n  const labelTextWidth = isV3\n    ? {\n        width:\n          parentState.labelLayout.width - placeholderStyle.paddingHorizontal,\n      }\n    : {\n        maxWidth:\n          parentState.labelLayout.width -\n          2 * placeholderStyle.paddingHorizontal,\n      };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              maxHeight: Math.max(roundness / 3, 2),\n              opacity,\n              bottom: Math.max(roundness, 2),\n              transform: [labelTranslationX],\n            },\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            isV3 && styles.md3OutlinedLabel,\n            {\n              top: topPosition + (isV3 ? 0 : 1),\n              backgroundColor: isV3 ? colors.surface : backgroundColor,\n              opacity,\n              transform: labelTextTransform,\n            },\n            labelTextWidth,\n          ]}\n          numberOfLines={1}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n  md3OutlinedLabel: {\n    left: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}