{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"activeUnderlineColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\"],\n    _excluded2 = [\"fontSize\", \"fontWeight\", \"height\", \"paddingHorizontal\", \"textAlign\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport InputLabel from \"./Label/InputLabel\";\nimport TextInputAdornment from \"./Adornment/TextInputAdornment\";\nimport { useTheme } from \"../../core/theming\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, MINIMIZED_LABEL_Y_OFFSET, LABEL_PADDING_TOP_DENSE, MIN_DENSE_HEIGHT_WL, MIN_DENSE_HEIGHT } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingFlat, interpolatePlaceholder, calculateFlatAffixTopPosition, calculateFlatInputHorizontalPadding, getFlatInputColors, getConstants } from \"./helpers\";\nimport { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from \"./Adornment/TextInputAdornment\";\nimport { AdornmentSide, AdornmentType, InputMode } from \"./Adornment/enums\";\n\nvar TextInputFlat = function TextInputFlat(_ref) {\n  var _affixTopPosition, _onAffixChange, _topPosition;\n\n  var _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$editable = _ref.editable,\n      editable = _ref$editable === void 0 ? true : _ref$editable,\n      label = _ref.label,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? false : _ref$error,\n      selectionColor = _ref.selectionColor,\n      underlineColor = _ref.underlineColor,\n      activeUnderlineColor = _ref.activeUnderlineColor,\n      dense = _ref.dense,\n      style = _ref.style,\n      theme = _ref.theme,\n      _ref$render = _ref.render,\n      render = _ref$render === void 0 ? function (props) {\n    return React.createElement(NativeTextInput, props);\n  } : _ref$render,\n      _ref$multiline = _ref.multiline,\n      multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n      parentState = _ref.parentState,\n      innerRef = _ref.innerRef,\n      onFocus = _ref.onFocus,\n      forceFocus = _ref.forceFocus,\n      onBlur = _ref.onBlur,\n      onChangeText = _ref.onChangeText,\n      onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n      onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n      onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n      left = _ref.left,\n      right = _ref.right,\n      placeholderTextColor = _ref.placeholderTextColor,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isAndroid = Platform.OS === 'android';\n  var colors = theme.colors,\n      isV3 = theme.isV3,\n      roundness = theme.roundness;\n  var font = !isV3 ? theme.fonts.regular : {};\n  var hasActiveOutline = parentState.focused || error;\n\n  var _getConstants = getConstants(isV3),\n      LABEL_PADDING_TOP = _getConstants.LABEL_PADDING_TOP,\n      FLAT_INPUT_OFFSET = _getConstants.FLAT_INPUT_OFFSET,\n      MIN_HEIGHT = _getConstants.MIN_HEIGHT;\n\n  var _ref3 = StyleSheet.flatten(style) || {},\n      fontSizeStyle = _ref3.fontSize,\n      fontWeight = _ref3.fontWeight,\n      height = _ref3.height,\n      paddingHorizontal = _ref3.paddingHorizontal,\n      textAlign = _ref3.textAlign,\n      viewStyle = _objectWithoutProperties(_ref3, _excluded2);\n\n  var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  var isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n  var adornmentConfig = getAdornmentConfig({\n    left: left,\n    right: right\n  });\n\n  var _calculateFlatInputHo = calculateFlatInputHorizontalPadding({\n    adornmentConfig: adornmentConfig,\n    isV3: isV3\n  }),\n      paddingLeft = _calculateFlatInputHo.paddingLeft,\n      paddingRight = _calculateFlatInputHo.paddingRight;\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal;\n    paddingRight = paddingHorizontal;\n  }\n\n  var leftLayout = parentState.leftLayout,\n      rightLayout = parentState.rightLayout;\n  var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    paddingHorizontal: paddingHorizontal,\n    inputOffset: FLAT_INPUT_OFFSET,\n    mode: InputMode.Flat,\n    isV3: isV3\n  });\n\n  var _getFlatInputColors = getFlatInputColors({\n    underlineColor: underlineColor,\n    activeUnderlineColor: activeUnderlineColor,\n    disabled: disabled,\n    error: error,\n    theme: theme\n  }),\n      inputTextColor = _getFlatInputColors.inputTextColor,\n      activeColor = _getFlatInputColors.activeColor,\n      underlineColorCustom = _getFlatInputColors.underlineColorCustom,\n      placeholderColor = _getFlatInputColors.placeholderColor,\n      errorColor = _getFlatInputColors.errorColor,\n      backgroundColor = _getFlatInputColors.backgroundColor;\n\n  var containerStyle = {\n    backgroundColor: backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness\n  };\n  var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n  var minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n  var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    label: label,\n    scale: fontScale,\n    isAndroid: isAndroid,\n    styles: StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n  };\n  var pad = calculatePadding(paddingSettings);\n  var paddingFlat = adjustPaddingFlat(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n  var placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n  var minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n  var flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n  var iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n  var leftAffixTopPosition = leftLayout.height ? calculateFlatAffixTopPosition(_objectSpread(_objectSpread({\n    height: flatHeight\n  }, paddingFlat), {}, {\n    affixHeight: leftLayout.height\n  })) : null;\n  var rightAffixTopPosition = rightLayout.height ? calculateFlatAffixTopPosition(_objectSpread(_objectSpread({\n    height: flatHeight\n  }, paddingFlat), {}, {\n    affixHeight: rightLayout.height\n  })) : null;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    placeholderOpacity: placeholderOpacity,\n    error: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    paddingOffset: {\n      paddingLeft: paddingLeft,\n      paddingRight: paddingRight\n    },\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    errorColor: errorColor,\n    roundness: roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n  var affixTopPosition = (_affixTopPosition = {}, _defineProperty(_affixTopPosition, AdornmentSide.Left, leftAffixTopPosition), _defineProperty(_affixTopPosition, AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n  var onAffixChange = (_onAffixChange = {}, _defineProperty(_onAffixChange, AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty(_onAffixChange, AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n  var adornmentProps = {\n    paddingHorizontal: paddingHorizontal,\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (_topPosition = {}, _defineProperty(_topPosition, AdornmentType.Affix, affixTopPosition), _defineProperty(_topPosition, AdornmentType.Icon, iconTopPosition), _topPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n\n  if (adornmentConfig.length) {\n    adornmentProps = _objectSpread(_objectSpread({}, adornmentProps), {}, {\n      left: left,\n      right: right,\n      textStyle: _objectSpread(_objectSpread({}, font), {}, {\n        fontSize: fontSize,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n\n  return React.createElement(View, {\n    style: [containerStyle, viewStyle]\n  }, React.createElement(Underline, {\n    hasActiveOutline: hasActiveOutline,\n    parentState: parentState,\n    underlineColorCustom: underlineColorCustom,\n    error: error,\n    colors: colors,\n    activeColor: activeColor\n  }), React.createElement(View, {\n    style: [styles.labelContainer, {\n      minHeight: minHeight\n    }]\n  }, !isAndroid && multiline && !!label && React.createElement(View, {\n    testID: \"patch-container\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, dense ? styles.densePatchContainer : styles.patchContainer, {\n      backgroundColor: viewStyle.backgroundColor || containerStyle.backgroundColor,\n      left: paddingLeft,\n      right: paddingRight\n    }]\n  }), React.createElement(InputLabel, {\n    parentState: parentState,\n    labelProps: labelProps\n  }), render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({\n    testID: 'text-input-flat'\n  }, rest), {}, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    placeholderTextColor: placeholderTextColor !== null && placeholderTextColor !== void 0 ? placeholderTextColor : placeholderColor,\n    editable: !disabled && editable,\n    selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, {\n      paddingLeft: paddingLeft,\n      paddingRight: paddingRight\n    }, !multiline || multiline && height ? {\n      height: flatHeight\n    } : {}, paddingFlat, _objectSpread(_objectSpread({}, font), {}, {\n      fontSize: fontSize,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left'\n    }), Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput]\n  }))), React.createElement(TextInputAdornment, adornmentProps));\n};\n\nexport default TextInputFlat;\n\nvar Underline = function Underline(_ref2) {\n  var parentState = _ref2.parentState,\n      error = _ref2.error,\n      colors = _ref2.colors,\n      activeColor = _ref2.activeColor,\n      underlineColorCustom = _ref2.underlineColorCustom,\n      hasActiveOutline = _ref2.hasActiveOutline;\n\n  var _useTheme = useTheme(),\n      isV3 = _useTheme.isV3;\n\n  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;\n  if (error) backgroundColor = colors === null || colors === void 0 ? void 0 : colors.error;\n  var activeScale = isV3 ? 2 : 1;\n  return React.createElement(Animated.View, {\n    style: [styles.underline, isV3 && styles.md3Underline, {\n      backgroundColor: backgroundColor,\n      transform: [{\n        scaleY: (isV3 ? hasActiveOutline : parentState.focused) ? activeScale : 0.5\n      }]\n    }]\n  });\n};\n\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1\n  },\n  md3Underline: {\n    height: 1\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2\n  }\n});","map":{"version":3,"mappings":"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","names":["React","InputLabel","TextInputAdornment","useTheme","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP_DENSE","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingFlat","interpolatePlaceholder","calculateFlatAffixTopPosition","calculateFlatInputHorizontalPadding","getFlatInputColors","getConstants","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","AdornmentSide","AdornmentType","InputMode","TextInputFlat","disabled","editable","label","error","selectionColor","underlineColor","activeUnderlineColor","dense","style","theme","render","props","NativeTextInput","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","isAndroid","Platform","OS","colors","isV3","roundness","font","fonts","regular","hasActiveOutline","focused","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","height","paddingHorizontal","textAlign","viewStyle","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","placeholder","wiggleOffsetX","paddingOffset","maxFontSizeMultiplier","affixTopPosition","Left","Right","onAffixChange","adornmentProps","Affix","Icon","isTextInputFocused","length","textStyle","visible","View","Underline","labelContainer","testID","pointerEvents","absoluteFill","densePatchContainer","patchContainer","ref","underlineColorAndroid","input","color","textAlignVertical","outline","activeScale","Animated","underline","md3Underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"sources":["TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\nimport { useTheme } from '../../core/theming';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP_DENSE,\n  MIN_DENSE_HEIGHT_WL,\n  MIN_DENSE_HEIGHT,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  getFlatInputColors,\n  getConstants,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor,\n  activeUnderlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = !isV3 ? theme.fonts.regular : {};\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingOffset: { paddingLeft, paddingRight },\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        <InputLabel parentState={parentState} labelProps={labelProps} />\n        {render?.({\n          testID: 'text-input-flat',\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          editable: !disabled && editable,\n          selectionColor:\n            typeof selectionColor === 'undefined'\n              ? activeColor\n              : selectionColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            { paddingLeft, paddingRight },\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              ...font,\n              fontSize,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n          ],\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors?: {\n    error?: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n  hasActiveOutline?: boolean;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n  hasActiveOutline,\n}: UnderlineProps) => {\n  const { isV3 } = useTheme();\n\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n\n  if (error) backgroundColor = colors?.error;\n\n  const activeScale = isV3 ? 2 : 1;\n\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        isV3 && styles.md3Underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [\n            {\n              scaleY: (isV3 ? hasActiveOutline : parentState.focused)\n                ? activeScale\n                : 0.5,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  md3Underline: {\n    height: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}